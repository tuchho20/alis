# Arch Linux Install Script (alis) archivo de configuración
#
# ¡Algunos valores de variables están precedidos por un ! carácter, esto significa que el valor se ignora.
# Algunas variables aceptan un solo valor, otras aceptan múltiples valores como se indica en los comentarios.
# Algunas variables son booleanas con un valor de verdadero o falso.
#
# Lea las páginas wiki de Arch Linux para obtener más información sobre los valores de las variables.
# https://github.com/picodotdev/alis/blob/master/README.md

# en eso
## KEYS establece la disposición del teclado.
## LOG_TRACE muestra los comandos ejecutados.
## LOG_FILE genera un archivo de registro con los comandos ejecutados y la salida generada durante la instalación.
KEYS="la-latin1"
LOG_TRACE="true"
LOG_FILE="false"

# partición
## DEVICE establece cuál es el DEVICE para la instalación. auto detecta automáticamente el DEVICE.
## DEVICE_TRIM establece si el DEVICE DEVICE admite la función TRIM.
## LVM establece si el DEVICE está particionado con el esquema de partición LVM.
## LUKS_PASSWORD y LUKS_PASSWORD_RETYPE si se establece es la contraseña para cifrar el DEVICE. Con LVM, se utiliza LVM en LUKS. Si "pedir" contraseña, alis pide una contraseña segura.
## El DEVICE raíz FILE_SYSTEM_TYPE está formateado con este tipo de sistema de archivos.
## BTRFS_SUBVOLUMES_MOUNTPOINTS permite personalizar los puntos de montaje de los subvolúmenes del sistema de archivos btrfs. swap sobvolume se crea solo si se crea un archivo de intercambio (solo si hay un valor SWAP_SIZE).
### Formato ("nombre, subvolumen, punto_de_montaje")
## SWAP_SIZE tamaño del archivo de intercambio con un tamaño del valor en megabytes. Si no hay ningún valor, no se crea ningún archivo de intercambio.
## PARTITION_MODE cómo se realiza la partición en el DEVICE.
El valor ### "auto" elimina todas las particiones existentes y crea una partición de arranque y una partición raíz utilizando el tamaño completo del disco.
### ¡Advertencia! todos los datos del disco se perderán, por lo tanto, haga una copia de seguridad de los datos existentes antes.
### El valor "personalizado" permite utilizar un script de partición dividido personalizado.
### "manual" permite especificar qué particiones existentes se utilizan para la partición de arranque y la partición raíz.
## PARTITION_MOUNT_POINTS puntos de montaje, número de partición y directorio, para montar desde DEVICE.
DEVICE="auto !/dev/sda !/dev/nvme0n1 !/dev/vda !/dev/mmcblk0" # sata nvme mmc (single)
DEVICE_TRIM="true"
LVM="false"
LUKS_PASSWORD=""
LUKS_PASSWORD_RETYPE=""
FILE_SYSTEM_TYPE="ext4 !btrfs !xfs !f2fs !reiserfs" # (single)
BTRFS_SUBVOLUMES_MOUNTPOINTS=("root,root,/" "home,home,/home" "var,var,/var" "snapshots,snapshots,/snapshots" "swap,swap,/swap")
#BTRFS_SUBVOLUMES_MOUNTPOINTS=("root,@,/" "home,@home,/home" "var,@var_log,/var/log" "snapshots,@snapshots,/.snapshots" "swap,@swap,/swap")
SWAP_SIZE="2048 !4096 !8192" # (single)
PARTITION_MODE="auto !custom !manual"
PARTITION_MOUNT_POINTS=("1=/boot" "2=/" "!3=/home")
PARTITION_CUSTOM_PARTED_UEFI="mklabel gpt mkpart ESP fat32 1MiB 512MiB mkpart root $FILE_SYSTEM_TYPE 512MiB 100% set 1 esp on"
PARTITION_CUSTOM_PARTED_BIOS="mklabel msdos mkpart primary ext4 4MiB 512MiB mkpart primary $FILE_SYSTEM_TYPE 512MiB 100% set 1 boot on"

# instalación_red
## Variables para configurar la conexión WIFI a internet.
## Se debe especificar la interfaz WIFI, el identificador WIFI ESSID y la contraseña WIFI. Si "pedir" contraseña, alis pide una contraseña segura.
## PING_HOSTNAME es el host para comprobar la conexión a Internet.
WIFI_INTERFACE=""
WIFI_ESSID=""
WIFI_KEY="ask"
WIFI_KEY_RETYPE="ask"
PING_HOSTNAME="mirrors.kernel.org"

# Instalar en pc
## REFLECTOR permite usar la utilidad reflector para usar los mejores espejos para la descarga de paquetes.
## REFLECTOR_COUNTRIES es una matriz de países para seleccionar réplicas.
## PACMAN_MIRROR si no se usa reflector, se usa este espejo específico.
## PACMAN_PARALLEL_DOWNLOADS configura pacman para usar descargas paralelas, se establece en falso en conexiones de Internet lentas y deshabilita los tiempos de espera.
## KERNELS núcleos y encabezados adicionales para instalar.
## KERNELS_COMPRESSION selecciona el algoritmo para la compresión del núcleo.
## KERNELS_PARAMETERS parámetros específicos del kernel para configurar en el arranque. p.ej. iommu=suave
REFLECTOR="false"
REFLECTOR_COUNTRIES=("Spain")
PACMAN_MIRROR="https://mirrors.kernel.org/archlinux/\$repo/os/\$arch"
PACMAN_PARALLEL_DOWNLOADS="true"
KERNELS="!linux-lts !linux-lts-headers !linux-hardened !linux-hardened-headers linux-zen linux-zen-headers" # (multiple)
KERNELS_COMPRESSION="!gzip !bzip2 !lzma !xz !lzop !lz4 zstd"
KERNELS_PARAMETERS="iommu=soft !nvme_load=YES"

# aur
## AUR_PACKAGE the AUR command to install in case some package requires it, only is installed if necessary.
AUR_PACKAGE="paru-bin !yay-bin !paru !yay !aurman" # (single)

# display driver
## DISPLAY_DRIVER installs a specific display driver, you must know which brand is the graphics hardware.
### With auto value intel driver is used for Intel brand, amdgpu driver for AMD brand and nvidia driver for NVIDIA brand.
### Other variables activates some features if are supported for the DISPLAY_DRIVER.
## KMS add support for kernel mode setting
## FASTBOOT, FRAMEBUFFER_COMPRESSION for intel graphics.
## DISPLAY_DRIVER_DDX add DDX driver which provides 2D acceleration in Xorg.
## VULKAN add support for Vulkan.
## DISPLAY_DRIVER_HARDWARE_VIDEO_ACCELERATION, DISPLAY_DRIVER_HARDWARE_VIDEO_ACCELERATION_INTEL add support for hardware video acceleration
DISPLAY_DRIVER="auto !intel !amdgpu !ati !nvidia !nvidia-lts !nvidia-dkms !nvidia-470xx-dkms !nvidia-390xx-dkms !nvidia-340xx-dkms !nouveau" # (single)
KMS="true"
FASTBOOT="true"
FRAMEBUFFER_COMPRESSION="true"
DISPLAY_DRIVER_DDX="false"
VULKAN="true"
DISPLAY_DRIVER_HARDWARE_VIDEO_ACCELERATION="true"
DISPLAY_DRIVER_HARDWARE_VIDEO_ACCELERATION_INTEL="intel-media-driver !libva-intel-driver" # (single)

# config
## Some variables for system configuration, from timezone, locale and keyboard to the root password.
## KEYLAYOUT, KEYMODEL, KEYVARIANT, KEYOPTIONS see https://wiki.archlinux.org/title/X_keyboard_extension#Preset_configuration
## KEYMAP, FONT, FONT_MAP see https://man.archlinux.org/man/vconsole.conf.5
## ROOT_PASSWORD root user password. If "ask" password alis asks for a secure password.
TIMEZONE="/usr/share/zoneinfo/Europe/Madrid"
LOCALES=("es_ES.UTF-8 UTF-8" "en_US.UTF-8 UTF-8")
LOCALE_CONF=("LANG=es_ES.UTF-8" "LANGUAGE=es_ES:es:en_US:en")
KEYLAYOUT="es"
KEYMODEL=""
KEYVARIANT=""
KEYOPTIONS=""
KEYMAP="KEYMAP=es"
FONT=""
FONT_MAP=""
HOSTNAME="archlinux"
ROOT_PASSWORD="ask"
ROOT_PASSWORD_RETYPE="ask"

# user
## USER_NAME, USER_PASSWORD Regular user to create in the system. A password must be specified, if "ask" password alis asks for a secure password.
## ADDITIONAL_USERS is an array of additional users to create in the system, if "ask" password alis asks for a secure password.
USER_NAME="picodotdev"
USER_PASSWORD="ask"
USER_PASSWORD_RETYPE="ask"
ADDITIONAL_USERS=() # eg. ("user1=password1" "user2=password2")

## systemd-homed
### SYSTEMD_HOMED "true" value requires interactivity to set user password
SYSTEMD_HOMED="false"
SYSTEMD_HOMED_STORAGE="!auto !luks !subvolume directory !fscrypt !cifs"
SYSTEMD_HOMED_STORAGE_LUKS_TYPE="auto !ext4 !btrfs !xfs"
SYSTEMD_HOMED_STORAGE_CIFS_DOMAIN=""
SYSTEMD_HOMED_STORAGE_CIFS_SERVICE=""

# mkinitcpio
## HOOKS are the system hooks to execute to build the initial ramdisk.
## MODULES are used to specify the modules to load before anything to execute to build the initial ramdisk.
### Generally, it is not necessary to modify, alis enables or disables some hooks
### taking in account other variables values like bootloader or device encryption.
HOOKS="base !udev !usr !resume !systemd !btrfs autodetect keyboard !keymap !consolefont !sd-vconsole modconf block !net !dmraid !mdadm !mdadm_udev !encrypt !sd-encrypt !lvm2 fsck filesystems"
MODULES="!vmd !tpm"

# bootloader
## BOOTLOADER system boot loader.
### With auto value grub is used for BIOS system, systemd for UEFI system.
BOOTLOADER="auto !grub !refind !systemd" # (single)

# shell
## CUSTOM_SHELL configures an alternative custom shell interpreter.
CUSTOM_SHELL="bash !zsh !dash !fish" # (single)

# desktop
## DESKTOP_ENVIRONMENT desktop environment to install.
## DISPLAY_MANAGER display manager to install and enable. With auto a default DM will be choosed based on the selected DE.
DESKTOP_ENVIRONMENT="!gnome !kde !xfce !mate !cinnamon !lxde !i3-wm !i3-gaps !deepin !budgie !bspwm !awesome !qtile !openbox !leftwm !dusk" # (single)
DISPLAY_MANAGER="auto !gdm !sddm !lightdm !lxdm" # (single)

# packages
## PACKAGES_MULTILIB configures multilib repository for pacman and install multilib packages for display driver.
## PACKAGES_INSTALL installs packages on system installation, edit alis-packages.conf to select packages.
## PACKAGES_PIPEWIRE installs PipeWire replacing PulseAudio, requires PACKAGES_INSTALL="true".
### It is recommended to install packages after base installation and reboot.
PACKAGES_MULTILIB="false"
PACKAGES_INSTALL="false"
PACKAGES_PIPEWIRE="false"

# provision
## PROVISION provisions the files placed in files directory on the installed system (preserving directory structure). This is useful to copy some configuration files.
PROVISION="false"

# misc
## VAGRANT for build a VirtualBox OVA with Packer
VAGRANT="false"

# systemd
## SYSTEMD_UNITS systemd units to enable or disable.
### If preceded with a "+" unit is enabled, if preceded with "-" unit is disabled, if preceded with "!" unit is ignored (no action is performed).
### eg. "+ufw.service" to enable, "-ufw.service" to disable, "!ufw.service" to ignore
SYSTEMD_UNITS=""

# reboot
## REBOOT on installation end reboots the system automatically. If "false" no reboot is performed and the user must do it explicitly.
REBOOT="true"

